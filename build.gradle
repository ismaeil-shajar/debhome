
import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath("com.netflix.nebula:gradle-ospackage-plugin:9.0.0")
    }
}

apply plugin: "nebula.ospackage"

buildDir = projectBuildDir
version = projectVersion
distsDirName = "./"

// OS Package plugin configuration
ospackage {
    packageName = pkgName
    version = "${project.version}"
    release = 1
    os = LINUX
    type = BINARY

    into pkgInstallFolder

    user pkgUser
    permissionGroup pkgUser

    // Copy the actual .jar file
    from(mainJar) {
        // Strip the version from the jar filename
        rename { String fileName ->
            "${pkgName}.jar"
        }
        fileMode 0500
        into "bin"
    }

    // Copy the config files
    from("target/conf") {
        exclude "application.conf"
        fileType CONFIG | NOREPLACE
        fileMode 0754
        into "conf"
    }

}

// Same as the buildRpm task
buildDeb {

    arch = "all"

    archiveName = "${pkgName}.deb"

    requires("openjdk-11-jre").or("java11-runtime").or("oracle-java11-installer").or("openjdk-11-jre-headless")

    from("target/conf") {
        include "application.conf"
        filter(ReplaceTokens, tokens: ['pkg.platform': 'deb'])
        fileType CONFIG | NOREPLACE
        fileMode 0754
        into "${pkgInstallFolder}/conf"
    }

    configurationFile("${pkgInstallFolder}/conf/application.conf")
    configurationFile("${pkgInstallFolder}/conf/application.yml")
  //  configurationFile("${pkgInstallFolder}/conf/logback.xml")


    preInstall file("${buildDir}/control/deb/preinst")
    postInstall file("${buildDir}/control/deb/postinst")
    preUninstall file("${buildDir}/control/deb/prerm")
    postUninstall file("${buildDir}/control/deb/postrm")

    user pkgUser
    permissionGroup pkgUser

    directory(pkgLogFolder, 0755)
    link("/etc/init.d/${pkgName}", "${pkgInstallFolder}/bin/${pkgName}.jar")
    link("${pkgInstallFolder}/bin/${pkgName}.yml", "${pkgInstallFolder}/conf/${pkgName}.yml")
    link("/etc/${pkgName}/conf", "${pkgInstallFolder}/conf")
}